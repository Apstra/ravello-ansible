Role - Create application (ravello.application_create)
======================================================

This role will create automatically an application on Ravello based on your ansible project.
By default, each host in the Ansible inventory will be converted into a VM on ravello.

.. NOTE::
  Most of the execution is done **Per host/VM** as per Ansible principle. As a results,
  it's possible to control which VM will be created by limiting the execution using ``--limit``

Define your VM
---------------

For each, VM you want to define the name of the base image to use.
This operation is done by using the variable ``ravello_image``
The value of this variable but match exactly the name of a VM in your inventory.

Below an example where the variable is defined in the inventory file directly

.. code-block:: text

    [spine]
    spine1       id=11
    spine2       id=21

    [spine:vars]
    ravello_image=vqfx10k-re-15.1X53-D60

Define your physical layout
----------------------------

To define your physical topology,
you need to provide the mapping for each interface of each VM in the variable ``ravello_topology``.

For each VM:
- The name need to match the name defined in the ansible inventory
- The interface mapping needs to be define in order as a list starting from the first interface.

For each interface, you need to provide a dict to indicate where the interface should be connected.
A L1 link is defined by an ``ID``, if you want to connect 2 interfaces together, you need to assign them the same ``ID``

The valid options for ``link`` are:
 - link id (integer)
 - ``dhcp-public``
 - ``static``

 When using a link id, it's possible to indicate if you want to assign a default gateway on the interface.
 Currently you can use the first or the last IP of the subnet as the default gateway. It's useful if you want to expose a service on this interface

 .. code-block:: yaml

     ravello_topology:
         spine1:
         -   link: 5
             gw: last
         -   link: 10
         -   link: 12

         spine2:
         -   link: 6
             gw: first
         -   link: 11
         -   link: 13

If you need to configure external service on the management interface you can define ``services`` as well.
A service is defined by 3 parameters separated with `/`: service name, port, protocol.
See example below.

.. code-block:: yaml

    ravello_topology:
      server-A:
        - link: dhcp-public
          services: [ webui/443/HTTPS, webui-http/80/HTTP ]

Also there are 3 services predefined : ssh, icmp and http. for these 3 you can just reference the shortname

.. code-block:: yaml

    ravello_topology:
      server-A:
        - link: dhcp-public
          services: [ ssh, icmp, webui/443/HTTPS, webui-http/80/HTTP ]


.. NOTE::
  Services can only be applied on the first interface for now

.. code-block:: yaml

    link: "link_id" or "dhcp-public" or "static"
    type: (optional) [virtio, default etc ..]
    services: (optional) [ssh, icmp or https]
    ip: (for link static)
    mask: (for link static)
    gw: (for link static or link_id)
    mac: (optional) "static" for autogenerated mac or mac you want to assign

.. NOTE::
  it's possible to connect more than 2 interfaces together by assigning the same ID to more than 2 interfaces





Example:

.. code-block:: yaml

    ravello_topology:
      leaf1:
        - link: dhcp-public
        - link: 91
        - null
        - link: 11

      leaf2:
        - link: dhcp-public
          services: [ ssh, icmp ]
        - link: 92
        - null
        - link: 11
        - link: 12
        - link: 13

      space:
        - link: static
          ip: "10.25.1.3"
          mask: "255.255.255.0"
          gw: "10.25.1.1"
          services: [ https, icmp ]
        - link: 54

Create the playbook
-------------------

Execution
---------

The Ravello API doesn't allow multiple concurrent sessions that are doing modification for the same application.
So to avoid any issue due to Ansible paralelle execution, you need to reduce the number of fork to 1 by using:

 - ``--forks=1`` in the cli
 - ``serial: 1`` in the playbook

.. code-block:: text

    ansible-playbook pb.rav.create.yaml --forks=1

.. code-block:: yaml

    - name: Create Application on Ravello
      connection: local
      hosts: all
      gather_facts: no
      serial: 1

It's possible to limit the execution of the playbook to a subset of VMs

.. code-block:: text

    ansible-playbook pb.rav.create.yaml --forks=1 --limit=leaf


Default Value
-------------

.. include:: _includes/roles_ravello.application_create_defaults_main.yaml
