---
###############################
## Get Blueprint ID         ###
###############################
    - name: Get Blueprint ID from Ravello
      ravello_get_id:
        resource_name: "{{ ravello_blueprint }}"
        resource_type: blueprints
        user: "{{ ravello_login_username }}"
        password: "{{ ravello_login_password }}"
      register: bp
      run_once: true
      tags: [ create ]

#####################################################
##  Create multiple application from Blueprint     ##
#####################################################
    - name: Create Applications from Blueprint
      uri:
        url: "https://cloud.ravellosystems.com/api/v1/applications/"
        method: POST
        user: "{{ ravello_login_username }}"
        password: "{{ ravello_login_password }}"
        force_basic_auth: yes
        status_code: 201
        HEADER_Content-Type: 'application/json'
        HEADER_Accept: 'application/json'
        body:
          name: "{{ item.app_name }}"
          description: "App created by ansible"
          baseBlueprintId: "{{ bp.json.id }}"
        body_format: json
      run_once: true
      changed_when: true
      register: apps
      with_items: "{{ ravello_app_list }}"
      tags: [ create ]

###############################
## Get Application ID       ###
###############################
    - name: Get App ID from Ravello for each App
      ravello_get_id:
        resource_name: "{{ item.app_name }}"
        resource_type: applications
        user: "{{ ravello_login_username }}"
        password: "{{ ravello_login_password }}"
      register: apps
      run_once: true
      with_items: "{{ ravello_app_list }}"
      tags: [ deploy, fqdn, token, inventory ]

    # - debug: var=apps
    #   run_once: true
    #   tags: [ deploy, debug, fqdn, token ]

#######################################################
##  Deploy Application(s)                            ##
#######################################################
    - name: Deploy Ravello Application(s)
      uri:
        url: "https://cloud.ravellosystems.com/api/v1/applications/{{ item.json.id }}/publish"
        method: POST
        user: "{{ ravello_login_username }}"
        password: "{{ ravello_login_password }}"
        force_basic_auth: yes
        status_code: 202
        HEADER_Content-Type: 'application/json'
        HEADER_Accept: 'application/json'
        body: >
          {
            "preferredCloud": "{{ ravello_deploy_topology_cloud }}",
            "preferredRegion": "{{ ravello_deploy_topology_region }}",
            "optimizationLevel": "{{ ravello_deploy_topology_optimization }}",
            "startAllVms": "{{ ravello_deploy_topology_start_all }}"
          }
        body_format: json
      run_once: true
      when: not item.json.published
      with_items: "{{ apps.results }}"
      tags: [ deploy ]

########################################
##  Set application Expiration time   ##
########################################
    - name: Set Application Expiration time
      uri:
        url: "https://cloud.ravellosystems.com/api/v1/applications/{{ item.json.id }}/setExpiration"
        method: POST
        user: "{{ ravello_login_username }}"
        password: "{{ ravello_login_password }}"
        force_basic_auth: yes
        status_code: 200
        HEADER_Content-Type: 'application/json'
        HEADER_Accept: 'application/json'
        body: '{  "expirationFromNowSeconds": {{ ravello_expiration_time_min * 60 }} }'
        body_format: json
      run_once: true
      # register: deploy
      when: not item.json.published
      with_items: "{{ apps.results }}"
      tags: [ deploy ]

###############################
## Get VM ID                ###
###############################
    - name: Get VM ID from Ravello
      ravello_get_id:
        resource_type: vms
        application_id: "{{ item.json.id }}"
        resource_name: "{{ inventory_hostname }}"
        user: "{{ ravello_login_username }}"
        password: "{{ ravello_login_password }}"
      register: vms
      with_items: "{{ apps.results }}"
      tags: [ fqdn, inventory ]

    # - debug: var=vms
###############################
##  Check VM Connectivity    ##
###############################
    - name: Get VM Public FQDN
      uri:
        url: "https://cloud.ravellosystems.com/api/v1/applications/{{ item.invocation.module_args.application_id }}/vms/{{ item.json.id }}/fqdn;deployment"
        method: GET
        user: "{{ ravello_login_username }}"
        password: "{{ ravello_login_password }}"
        force_basic_auth: yes
        status_code: 200
        HEADER_Content-Type: 'application/json'
        HEADER_Accept: 'application/json'
      register: public_ip
      with_items: "{{ vms.results }}"
      tags: [ fqdn, inventory ]

    # - debug: var=public_ip
    #   tags: [ fqdn ]

#######################################
##  Create file with all VMs info    ##
#######################################

    - name: FQDN - Delete previous file
      file: path={{ ravello_fqdn_dir }}/{{ ravello_fqdn_file_name }}.yaml state=absent
      tags: [ fqdn ]
      run_once: true

    # Add a line to a file if it does not exist, without passing regexp
    - name: FQDN - Create applications name in file
      lineinfile:
        dest: "{{ ravello_fqdn_dir }}/{{ ravello_fqdn_file_name }}.yaml"
        line: "{{ item.item.item.item.app_name }}:"
        create: yes
      with_items: "{{ public_ip.results }}"
      tags: [ fqdn ]
      run_once: true

    - name: FQDN - Add VMs name to file
      lineinfile:
        # dest: "apps/{{ item.item.item.item.app_name }}/fqdn.yaml"
        dest: "{{ ravello_fqdn_dir }}//{{ ravello_fqdn_file_name }}.yaml"
        line: "  {{ inventory_hostname }}: {{ item.json.value }}"
        create: yes
        insertafter: "^{{ item.item.item.item.app_name }}:"
      with_items: "{{ public_ip.results }}"
      tags: [ fqdn ]

###########################################
##  Create inv file with all VMs info    ##
###########################################

    - name: INV - Check if ravello_inventory_dir exist
      file: path={{ ravello_inventory_dir }} state=directory
      tags: [ inventory ]
      run_once: true

    - name: INV - Cleanup previous inventory
      template:
        src: "{{ ravello_inventory_template }}"
        dest: "{{ ravello_inventory_dir }}/{{ ravello_inventory_file_name }}.ini"
      tags: [ inventory ]
      run_once: true

    - name: INV - Create group name in file
      lineinfile:
        dest: "{{ ravello_inventory_dir }}/{{ ravello_inventory_file_name }}.ini"
        line: "[{{ inventory_hostname }}]"
        create: yes
        insertafter: "###Device Here####"
      tags: [ inventory ]

    - name: INV - Add VMs name to inv
      lineinfile:
        dest: "{{ ravello_inventory_dir }}/{{ ravello_inventory_file_name }}.ini"
        line: "{{ item.json.value }}"
        create: yes
        insertafter: '^\[{{ inventory_hostname }}\]'
      with_items: "{{ public_ip.results }}"
      tags: [ inventory ]

##########################################
## Create Token for each application    ##
##########################################

    - name: TOKEN - Create Ephemeral Token for Each Applications
      uri:
        url: "https://cloud.ravellosystems.com/api/v1/ephemeralAccessTokens"
        method: POST
        user: "{{ ravello_login_username }}"
        password: "{{ ravello_login_password }}"
        force_basic_auth: yes
        status_code: 201
        HEADER_Content-Type: 'application/json'
        HEADER_Accept: 'application/json'
        body: >
          { "name": "{{ item.item.app_name }}-token",
            "permissions": [
              {
                "actions": {{ ravello_token_permissions | to_json }},
                "resourceType": "{{ ravello_token_resource_type }}",
                "filterCriterion": {
                  "type": "COMPLEX",
                  "operator": "Or",
                  "criteria": [
                    {
                      "type": "SIMPLE",
                      "index": 1,
                      "operator": "Equals",
                      "propertyName": "ID",
                      "operand": "{{ item.json.id }}"
                    }
                  ]
                }
              }
            ]
          }
        body_format: json
      register: tokens
      with_items: "{{ apps.results }}"
      run_once: true
      tags: [ token ]

    # - debug: var=tokens
    #   run_once: true
    #   tags: [ token ]

    - name: TOKEN - Delete previous user token file
      file: path={{ ravello_token_dir }}/{{ ravello_token_file_name }}.yaml state=absent
      tags: [ token ]
      run_once: true

    - name: TOKEN - Add User URLs to file
      lineinfile:
        dest: "{{ ravello_token_dir }}/{{ ravello_token_file_name }}.yaml"
        line: "{{ item.item.item.app_name }}: https://access.ravellosystems.com/simple/#/{{ item.json.token }}/apps/{{ item.item.json.id}}"
        create: yes
        # insertafter: "^{{ item.item.item.app_name }}"
      with_items: "{{ tokens.results }}"
      tags: [ token ]
      run_once: true

    - name: TOKEN - Delete previous admin token file
      file: path={{ ravello_token_dir }}/{{ ravello_token_file_name }}_admin.yaml state=absent
      when: ravello_token_create_admin_url == true
      tags: [ token ]
      run_once: true

    - name: TOKEN - Add Ravello URLs to file
      lineinfile:
        dest: "{{ ravello_token_dir }}/{{ ravello_token_file_name }}_admin.yaml"
        line: "{{ item.item.item.app_name }}: https://cloud.ravellosystems.com/#/{{ item.json.token }}/apps/{{ item.item.json.id}}"
        create: yes
      with_items: "{{ tokens.results }}"
      when: ravello_token_create_admin_url == true
      tags: [ token ]
      run_once: true
