---
###############################
## Check tmp dir            ###
###############################
    - name: Create tmp directory
      file: path={{ ravello_tmp_dir }} state=directory
      run_once: True
      tags: [ create ]

###############################
## Get Application ID       ###
###############################
    - name: Check if application exist
      ravello_get_id:
        resource_name: "{{ ravello_app_name }}"
        resource_type: applications
        user: "{{ ravello_login_username }}"
        password: "{{ ravello_login_password }}"
      register: app
      run_once: true
      tags: [ create, doc ]

###############################
##  Create the application   ##
###############################
    - name: Create Application on Ravello (if not present)
      uri:
        url: "https://cloud.ravellosystems.com/api/v1/applications"
        method: POST
        user: "{{ ravello_login_username }}"
        password: "{{ ravello_login_password }}"
        force_basic_auth: yes
        status_code: 201
        HEADER_Content-Type: 'application/json'
        HEADER_Accept: 'application/json'
        body:
          name: "{{ ravello_app_name }}"
          description: "{{ ravello_app_desc }}"
          design: {}
        body_format: json
      register: newapp
      run_once: true
      changed_when: true
      when: app.found == False
      tags: [ create, doc ]

    - name: Set App ID variable
      set_fact:
        application_id: "{{ newapp.json.id }}"
      when: app.found == False
      tags: [ create, doc ]
      run_once: true

    - name: Set App ID variable
      set_fact:
        application_id: "{{ app.json.id }}"
      when: app.found == True
      tags: [ create, doc ]
      run_once: true
#####################################################
##  Create the documentation for the application   ##
#####################################################
    - name: Get Documentation for Application
      uri:
        url: "https://cloud.ravellosystems.com/api/v1/applications/{{application_id}}/documentation"
        method: GET
        user: "{{ ravello_login_username }}"
        password: "{{ ravello_login_password }}"
        force_basic_auth: yes
        status_code: 404,200
        HEADER_Content-Type: 'application/json'
        HEADER_Accept: 'application/json'
      register: doc
      run_once: true
      when: ravello_app_documentation is defined
      tags: [ doc ]

    # - debug: var=doc
    #   tags: [ doc ]

    - name: Check if Documentation already exist
      set_fact:
        ravello_doc_method: POST
      when: doc.status == 404
      tags: [ doc ]
      run_once: true

    - name: Create Documentation for Application
      uri:
        url: "https://cloud.ravellosystems.com/api/v1/applications/{{application_id}}/documentation"
        method: "{{ ravello_doc_method | default('PUT') }}"
        user: "{{ ravello_login_username }}"
        password: "{{ ravello_login_password }}"
        force_basic_auth: yes
        status_code: 200
        HEADER_Content-Type: 'application/json'
        HEADER_Accept: 'application/json'
        body:
          value: "{{ ravello_app_documentation }}"
        body_format: json
      run_once: true
      changed_when: true
      when:
        - ravello_app_documentation is defined
      tags: [ doc ]

## Check if VM already exist, connect info from Ravello
#     - name: Get VM ID from Ravello
#       ravello_get_id:
#         application_id: "{{ app.json.id }}"
#         resource_name: "{{ inventory_hostname }}"
#         resource_type: vms
#         user: "{{ ravello_login_username }}"
#         password: "{{ ravello_login_password }}"
#       register: vm
#       tags: [ create, fqdn ]
#       when: app.found == True

######################################
## Get baseVMid Number from Ravello
######################################
    - name: Get Image ID from Ravello
      ravello_get_id:
        resource_name: "{{ ravello_image }}"
        resource_type: images
        user: "{{ ravello_login_username }}"
        password: "{{ ravello_login_password }}"
      register: image
      #when: vm.found == False
      tags: [ create ]

#    - debug: var=vm
######################################
## Get id for Keypair from Ravello
######################################
    - name: Get Key Pair ID from Ravello
      ravello_get_id:
        resource_type: keypairs
        resource_name: "{{ ravello_key_pair }}"
        user: "{{ ravello_login_username }}"
        password: "{{ ravello_login_password }}"
      register: keypair
      when: ravello_key_pair is defined
      tags: [ create ]

#################################
## Add VMs to the application  ##
#################################
    - name: Add VM to Application
      ravello_addvm:
        appId: "{{ application_id }}"
        baseVmId: "{{ image.json.baseVmId }}"
        user: "{{ ravello_login_username }}"
        password: "{{ ravello_login_password }}"
      register: vm
  #    when: vm.found == False
      tags: [ create, fqdn ]

#################################
##   Update Network Topology   ##
#################################
    - name: Render Template to Update VM
      template: src=update_vm.json.j2 dest={{ ravello_tmp_dir }}/update_{{ inventory_hostname }}_vm.json
      when: ravello_topology[inventory_hostname] is defined
      tags: [ create ]

    - name: Update VM in Application
      uri:
        url: "https://cloud.ravellosystems.com/api/v1/applications/{{ application_id }}/vms/{{ vm.msg.id }}"
        method: PUT
        user: "{{ ravello_login_username }}"
        password: "{{ ravello_login_password }}"
        force_basic_auth: yes
        status_code: 200
        HEADER_Content-Type: 'application/json'
        HEADER_Accept: 'application/json'
        body: "{{ lookup('file' , '{{ ravello_tmp_dir }}/update_{{ inventory_hostname }}_vm.json') }}"
        body_format: json
      when: ravello_topology[inventory_hostname] is defined
      changed_when: true
      tags: [ create ]
